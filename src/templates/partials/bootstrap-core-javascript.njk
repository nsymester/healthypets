<!-- Include all compiled plugins (below), or include individual files as needed -->
{# <script src="/js/jquery.slim.min.js"></script> #}
<script src="/js/jquery-3.3.1.min.js"></script>
<script src="/js/popper.min.js"></script>
<script src="/js/bootstrap.min.js"></script>
<script src="/js/index.bundle.js"></script>
<script src="/js/application.bundle.js"></script>

<script type="text/javascript">


$('#pet-type-dog').click(function () {
  $('#catInfo').collapse('hide');
  $('#dogInfo').collapse('show');
});

$('#pet-type-cat').click(function () {
  $('#dogInfo').collapse('hide');
  $('#catInfo').collapse('show');
});

$('#pre-existing-condition-yes').click(function () {
  $('#pet-condition').collapse('show');
});
$('#pre-existing-condition-no').click(function () {
  $('#pet-condition').collapse('hide');
});

// conditions

$('#conditionSelect').change(function () {
  let select = $('#conditionSelect option:selected').val();
  // create a pill
  // append pill to condition list
  $('.conditions').append(`<div class="pill__condition">${select} <span class="close">x</span></div>`);

  checkForConditions();
});

function checkForConditions () {
  $('.pill__condition .close').on('click', function (evt) {
    evt.preventDefault();
    evt.currentTarget.parentNode.remove();
  });
}

// postcodes

$('#postcode-search').click(function (evt) {
  evt.preventDefault();
  $('#postcode-result').collapse('toggle');
  $('#manualaddress').collapse('show');
  $('#address').collapse('hide');
});

$('.address__postcodes a').on('click', function (evt) {
  evt.preventDefault();
  $('#address').collapse('show');
  $('#postcode-result').collapse('hide');
  $('#manualaddress').collapse('hide');
})

$('.address__link').on('click', function (evt) {
  evt.preventDefault();
  $('#address').collapse('show');
  $('#postcode-result').collapse('hide');
  $('#manualaddress').collapse('hide');
})

// cover types

$('#lifecover-link').click(function () {
  $('#lifecover').collapse('show');
  $('#maximumcover').collapse('hide');
  $('#accidentcover').collapse('hide');
});

$('#maximum-link').click(function () {
  $('#lifecover').collapse('hide');
  $('#maximumcover').collapse('show');
  $('#accidentcover').collapse('hide');
});

$('#accident-link').click(function () {
  $('#lifecover').collapse('hide');
  $('#maximumcover').collapse('hide');
  $('#accidentcover').collapse('show');
});

// stop web page from scrolling to top when link is clicked that triggers JavaScript
$('.btn--cover-level').click(function (e) {
  e.preventDefault();
  // target id
  let targetId = $(this).data('target');
  let targetHeight =  $(targetId).height();
  let documentHeight = $(document).height();
  $('html, body').animate({ scrollTop: documentHeight }, targetHeight);

  if (this.innerHTML === 'Choose level') {
    this.innerHTML = 'Hide levels';
    $(this).removeClass('btn-primary');
    $(this).addClass('btn--outline');
  } else {
    this.innerHTML = 'Choose level';
    $(this).removeClass('btn--outline');
    $(this).addClass('btn-primary');
  }

});

$('#regular-pay-monthly').click(function () {
  $('#directDebitDetails').collapse('show');
  $('#paymentType').collapse('hide');
});
$('#regular-pay-annually').click(function () {
  $('#paymentType').collapse('show');
  $('#directDebitDetails').collapse('hide');
});

$('#payment-type-debit').click(function () {
  $('#directDebitDetails').collapse('show');
  $('#creditCardDetails').collapse('hide');
});
$('#payment-type-credit').click(function () {
  $('#creditCardDetails').collapse('show');
  $('#directDebitDetails').collapse('hide');
});


$('.cover__info').click(function (e){

});

var count = 1

function isNumberKey(event) {
    var keyCode = window.event ? event.keyCode : event.which;

    if (event.keyCode === 8 // backspace
        || event.keyCode === 46 // delete
        || event.keyCode === 13 // enter key
        || event.keyCode === 9 // tab
        || event.keyCode === 116 // F5 (refresh)
        || event.keyCode === 112 // F1
        || event.keyCode === 113 //F2
        || event.keyCode === 114 //F3
        || event.keyCode === 115 //F4
        || event.keyCode === 117 //F6
        || event.keyCode === 118 //F7
        || event.keyCode === 119 //F8
        || event.keyCode === 120 //F9
        || event.keyCode === 121 //F10
        || event.keyCode === 122 //F11
        || event.keyCode === 123 //F12
    ) {
        return true;
    }
    else if ( event.keyCode < 48 || event.keyCode > 57) {
        if (count < 6) {
            count++; //adds one to count
        }
        else {
            console.log("Please Only Enter Numerical Values");
            count = 1;
        }
        return false;
    }
    else return true;
}


var selectAlt, i, j, selElement, selectedItem, optionList, optionItem;

// @group cache DOM

/* look for any elements with the class "select--alt": */
selectAlt = document.getElementsByClassName('select--alt');

// @group bind Events

for (i = 0; i < selectAlt.length; i++) {
  selElement = selectAlt[i].getElementsByTagName('select')[0];

  /* for each element, create a new DIV that will act as the selected item: */
  selectedItem = document.createElement('DIV');
  selectedItem.setAttribute('class', 'select-selected');
  selectedItem.innerHTML = selElement.options[selElement.selectedIndex].innerHTML;

  selectAlt[i].appendChild(selectedItem);

  /* for each element, create a new DIV that will contain the option list: */
  optionList = document.createElement('DIV');
  optionList.setAttribute('class', 'select-items select-hide');

  for (j = 1; j < selElement.length; j++) {
    /* for each option in the original select element,
    create a new DIV that will act as an option item: */
    optionItem = document.createElement('DIV');
    optionItem.innerHTML = selElement.options[j].innerHTML;
    optionItem.addEventListener('click', syncOptionSelected);

    optionList.appendChild(optionItem);
  }

  selectAlt[i].appendChild(optionList);

  selectedItem.addEventListener('click', closeOtherOptions);
}

// @group methods

function syncOptionSelected (e) {
  /* when an item is clicked, update the original select box,
  and the selected item: */
  var y, i, k, originalSelect, h;
  originalSelect = this.parentNode.parentNode.getElementsByTagName('select')[0];

  // store the selected item
  h = this.parentNode.previousSibling;
  for (i = 0; i < originalSelect.length; i++) {
    if (originalSelect.options[i].innerHTML === this.innerHTML) {
      originalSelect.selectedIndex = i;
      h.innerHTML = this.innerHTML;
      y = this.parentNode.getElementsByClassName('same-as-selected');
      for (k = 0; k < y.length; k++) {
        y[k].removeAttribute('class');
      }
      this.setAttribute('class', 'same-as-selected');
      break;
    }
  }
  h.click();
  if (originalSelect.getAttribute('id') === 'conditionSelect') {
    $('.conditions').append(`<div class='pill__condition'>${h.innerHTML} <span class='close'>x</span></div>`);
    checkForConditions();
  }
}

function closeOtherOptions (e) {
  /* when the select box is clicked, close any other select boxes,
  and open/close the current select box: */
  e.stopPropagation();
  closeAllSelect(this);
  this.nextSibling.classList.toggle('select-hide');
  this.classList.toggle('select-arrow-active');
}

function closeAllSelect (elmnt) {
  /* a function that will close all select boxes in the document,
  except the current select box: */
  var x, y, i, arrNo = [];
  x = document.getElementsByClassName('select-items');
  y = document.getElementsByClassName('select-selected');
  for (i = 0; i < y.length; i++) {
    if (elmnt == y[i]) {
      arrNo.push(i)
    } else {
      y[i].classList.remove('select-arrow-active');
    }
  }
  for (i = 0; i < x.length; i++) {
    if (arrNo.indexOf(i)) {
      x[i].classList.add('select-hide');
    }
  }
}

/* if the user clicks anywhere outside the select box,
then close all select boxes: */
document.addEventListener('click', closeAllSelect);
</script>