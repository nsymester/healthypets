<!-- Include all compiled plugins (below), or include individual files as needed -->
{# <script src="/js/jquery.slim.min.js"></script> #}
<script src="/js/jquery-3.3.1.min.js"></script>
<script src="/js/popper.min.js"></script>
<script src="/js/bootstrap.min.js"></script>
<script src="/js/index.bundle.js"></script>

<script type="text/javascript">

var count = 1

function isNumberKey(event) {
  var keyCode = window.event ? event.keyCode : event.which;

  if (event.keyCode === 8 // backspace
    || event.keyCode === 46 // delete
    || event.keyCode === 13 // enter key
    || event.keyCode === 9 // tab
    || event.keyCode === 116 // F5 (refresh)
    || event.keyCode === 112 // F1
    || event.keyCode === 113 //F2
    || event.keyCode === 114 //F3
    || event.keyCode === 115 //F4
    || event.keyCode === 117 //F6
    || event.keyCode === 118 //F7
    || event.keyCode === 119 //F8
    || event.keyCode === 120 //F9
    || event.keyCode === 121 //F10
    || event.keyCode === 122 //F11
    || event.keyCode === 123 //F12
  ) {
      return true;
  }
  else if ( event.keyCode < 48 || event.keyCode > 57) {
    if (count < 6) {
      count++; //adds one to count
    }
    else {
      console.log("Please Only Enter Numerical Values");
      count = 1;
    }
    return false;
  }
  else return true;
}

// Example starter JavaScript for disabling form submissions if there are invalid fields
(function() {
  'use strict';
  window.addEventListener('load', function() {
    // Fetch all the forms we want to apply custom Bootstrap validation styles to
    let forms = document.getElementsByClassName('needs-validation');
    // Loop over them and prevent submission
    let validation = Array.prototype.filter.call(forms, function(form) {
      form.addEventListener('submit', function(event) {
        if (form.checkValidity() === false) {

          // if pet type selected do validity check on it's children which affect its outcome
          // if pet-type selected
          //  do validity check on the elements in the associated collapse div

          event.preventDefault();
          event.stopPropagation();
        } else {
          // let submit = $(this).closest('form').find('button[type=submit]');
          let submit = $('button[type=submit]');


          if ($(submit).data('href') == null) {
            let nextPage = $(submit[1]).data('href');
          } else {
            let nextPage = $(submit[0]).data('href');
          }

          console.log('submit: ', submit[0]);
          console.log('nextPage: ', nextPage);

          {# form.action = nextPage;
          form.submit(); #}
        }
        form.classList.add('was-validated');
      }, false);
    });
  }, false);
})();

</script>